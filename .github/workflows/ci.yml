name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: suomisf_test
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Wait for PostgreSQL
      run: |
        while ! pg_isready -h 127.0.0.1 -p 5432 -U postgres; do
          sleep 1
        done

    - name: Set up test database
      run: |
        PGPASSWORD=postgres psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE suomisf_test;"
        PGPASSWORD=postgres psql -h 127.0.0.1 -U postgres suomisf_test < migrations/001_initial_schema.sql

    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/suomisf_test?sslmode=disable
        JWT_SECRET: test-secret-key
        GIN_MODE: test
      run: go test -v -cover ./...

    - name: Run go vet
      run: go vet ./...

    - name: Run go fmt check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          gofmt -s -l .
          exit 1
        fi

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Build application
      run: go build -v ./...

    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o bin/gosuomisf-linux-amd64 .
        GOOS=windows GOARCH=amd64 go build -o bin/gosuomisf-windows-amd64.exe .
        GOOS=darwin GOARCH=amd64 go build -o bin/gosuomisf-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -o bin/gosuomisf-darwin-arm64 .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: bin/
